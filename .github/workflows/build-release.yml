name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on tags like v1.0.0, v2.1.3, etc.

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Generate icon
      run: |
        python generate_icon.py
    
    - name: Build executable with PyInstaller
      run: |
        pyinstaller --clean --noconfirm build.spec
    
    - name: Get tag name
      id: tag_name
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Voltcraft Studio ${{ steps.tag_name.outputs.TAG }}
        draft: false
        prerelease: false
        body: |
          ## Voltcraft Studio ${{ steps.tag_name.outputs.TAG }}
          
          ### Download
          Download the portable Windows executable below - no installation required!
          
          ### Features
          - GPU-accelerated oscilloscope data visualization
          - Independent axis zoom control (Ctrl/Shift + Scroll)
          - Streaming file parser for large datasets
          - Peak downsampling preserves all signal details
          - Dark mode UI with tabbed interface
          
          ### Usage
          Simply download `VoltcraftStudio.exe` and run it. You can optionally pass a file path as argument:
          ```
          VoltcraftStudio.exe "path\to\your\data.txt"
          ```
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/VoltcraftStudio.exe
        asset_name: VoltcraftStudio.exe
        asset_content_type: application/octet-stream

